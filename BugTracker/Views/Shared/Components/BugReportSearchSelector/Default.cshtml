@model BugReportSearchSelectorViewModel

<input id="project-id" type="hidden" asp-for="ProjectId" />
<input id="can-remove-entry" type="hidden" asp-for="CanRemoveEntry" />
<input id="show-search-bar" type="hidden" asp-for="ShowSearchBar" />

<input id="bug-report-id" type="hidden" />
<input id="local-bug-report-id" type="hidden" />
<input id="bug-report-title" type="hidden" />
<input id="bug-report-link" type="hidden" />

<!-- Typeahead input field for adding bug reports -->
@if (Model.ShowSearchBar)
{
    <div class="row m-3">
        <input id="Search" type="text" class="typeahead form-control" placeholder="Type bug report title / ID" autocomplete="off" spellcheck="false" />
        <input id="btnAddBugReportEntry" type="button" onclick="addRow();" value="Add Bug Report" class="btn btn-primary" />
    </div>
}

<!-- Display bug reports -->
<table>
    <tbody id="tbEntries">
    </tbody>
</table>

<script language="javascript" type="text/javascript">

    function addRow() {
        @{
              Model.MilestoneBugReportEntries.Add(new MilestoneBugReportEntry());
        }

        var index = $("#tbEntries").children("tr").length;
        var canRemoveEntry = $("#can-remove-entry").val() === 'True';
        var bugReportLink = $("#bug-report-link").val();
        var bugReportId = $("#bug-report-id").val();
        var localBugReportId = $("#local-bug-report-id").val();

        var bugReportTitle = $("#bug-report-title").val();

        var indexCell = `<td style='display:none'><input name='MilestoneBugReportEntries.Index'
            type='hidden' value='${index}' /></td>`;

        var removeCell = '';
        if (canRemoveEntry) {
            removeCell = `<input id='btnRemoveEntry' type='button'
            class="btn btn-danger m-1" value='Remove' onclick='removeRow(${index});' />`;
        }

        var text = `<p class='m-1'><strong>${localBugReportId}</strong> - <a href="${bugReportLink}">${bugReportTitle}</a></p>`
        var bugReportCard = `<td><div class="card"><div class="card-body">
            <div class='row'>${text}${removeCell}</div>
        </div></div>`

        var localIdCell = `<td><input id='MilestoneBugReportEntries_${index}_LocalBugReportId'
            name='MilestoneBugReportEntries[${index}].LocalBugReportId' type='hidden' value='${localBugReportId}' /></td>`;
        var idCell = `<td><input id='MilestoneBugReportEntries_${index}_BugReportId'
            name='MilestoneBugReportEntries[${index}].BugReportId' type='hidden' value='${bugReportId}' /></td>`
        var titleCell = `<td><input id='MilestoneBugReportEntries_${index}_Title'
            name='MilestoneBugReportEntries[${index}].Title' type='hidden' value='${bugReportTitle}' /></td>`;

        var newRow = `<tr id='trEntry${index}'>
            ${indexCell}${localIdCell}${idCell}${titleCell}${bugReportCard}</tr>`;
        $("#tbEntries").append(newRow);
    }

    function removeRow(id) {
        var controlToBeRemoved = `#trEntry${id}`;
        $(controlToBeRemoved).remove();
    }

    function populateInitialRows() {

        var bugReportEntries = @Json.Serialize(Model.MilestoneBugReportEntries);

        console.table(bugReportEntries);

        for (var i = 0; i < bugReportEntries.length; i++)
        {
            var bugReportEntry = bugReportEntries[i];

            // Set hidden variables
            document.getElementById("bug-report-id").value = bugReportEntry.bugReportId;
            document.getElementById("local-bug-report-id").value = bugReportEntry.localBugReportId;
            document.getElementById("bug-report-title").value = bugReportEntry.title;
            document.getElementById("bug-report-link").value = bugReportEntry.url;

            if (bugReportEntry.localBugReportId > 0) {
                addRow();
            }
        }
    }

    populateInitialRows();
</script>

@* Typeahead script *@
@if (Model.ShowSearchBar) {
    <script src="@Url.Content("~/js/bug-report-search-typeahead.js")"></script>
}